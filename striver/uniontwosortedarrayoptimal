import java.util.*;

class Solution {
    public static void unionSorted(int[] arr1, int[] arr2) {
        int i = 0, j = 0;
        List<Integer> union = new ArrayList<>();

        // Traverse both arrays
        while (i < arr1.length && j < arr2.length) {
            if (arr1[i] == arr2[j]) {
                // add if not duplicate in union
                if (union.isEmpty() || union.get(union.size() - 1) != arr1[i])
                    union.add(arr1[i]);
                i++;
                j++;
            } else if (arr1[i] < arr2[j]) {
                if (union.isEmpty() || union.get(union.size() - 1) != arr1[i])
                    union.add(arr1[i]);
                i++;
            } else {
                if (union.isEmpty() || union.get(union.size() - 1) != arr2[j])
                    union.add(arr2[j]);
                j++;
            }
        }

        // Add remaining elements in arr1
        while (i < arr1.length) {
            if (union.isEmpty() || union.get(union.size() - 1) != arr1[i])
                union.add(arr1[i]);
            i++;
        }

        // Add remaining elements in arr2
        while (j < arr2.length) {
            if (union.isEmpty() || union.get(union.size() - 1) != arr2[j])
                union.add(arr2[j]);
            j++;
        }

        System.out.println(union);
    }

    public static void main(String[] args) {
        int arr1[] = {1, 2, 2, 3, 5};
        int arr2[] = {2, 4, 5, 6};
        
        unionSorted(arr1, arr2);
    }
}
